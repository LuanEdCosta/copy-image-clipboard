{"version":3,"sources":["styles/Theme.ts","styles/GlobalStyles.ts","assets/FirstImage.jpg","assets/SecondImage.png","components/Buttons/index.ts","pages/Home/styles.ts","pages/Home/index.tsx","locales/EN/index.ts","locales/index.ts","pages/App/index.tsx","index.tsx"],"names":["LIGHT_THEME","id","background","snow","primaryText","secondaryText","accent","accentLight","GlobalStyles","createGlobalStyle","theme","Button","styled","button","attrs","props","type","disabled","css","Container","div","Item","Image","img","CopyButton","Home","t","useTranslation","firstImageRef","useRef","secondImageRef","handleCopyFirstImage","a","imageSrc","current","src","copyImage","handleCopySecondImage","FirstImage","ref","alt","onClick","SecondImage","resource","i18next","use","initReactI18next","init","resources","en","EN","fallbackLng","lng","defaultNS","debug","App","ReactDOM","render","document","getElementById"],"mappings":"+SAUaA,EAAwB,CACnCC,GAAI,QACJC,WAAY,UACZC,KAAM,UACNC,YAAa,UACbC,cAAe,UACfC,OAAQ,UACRC,YAAa,W,OCfFC,EAAeC,YAAH,qsBAyBP,qBAAGC,MAAkBP,QAC1B,qBAAGO,MAAkBN,eASrB,qBAAGM,MAAkBN,e,yDCrCnB,MAA0B,uCCA1B,MAA0B,wCCE5BO,EAASC,IAAOC,OAAOC,OAAM,SAACC,GAAD,MAAY,CACpDC,KAAMD,EAAMC,MAAQ,YADAJ,CAAH,sfAwBH,SAACG,GAAD,OAAWA,EAAML,MAAMJ,UAEnC,SAACS,GACD,GAAIA,EAAME,SACR,OAAOC,YAAP,2FASY,SAACH,GAAD,OAAWA,EAAML,MAAMH,eCnC5BY,EAAYP,IAAOQ,IAAV,yVAoBTC,EAAOT,IAAOQ,IAAV,4OAOD,SAACL,GAAD,OAAWA,EAAML,MAAMR,cAO1BoB,EAAQV,IAAOW,IAAV,oHASLC,EAAaZ,YAAOD,EAAPC,CAAH,0B,OCCRa,EAvCQ,WAAO,IACpBC,EAAMC,YAAe,QAArBD,EAEFE,EAAgBC,iBAAgC,MAChDC,EAAiBD,iBAAgC,MAEjDE,EAAoB,uCAAG,8BAAAC,EAAA,2DACrBC,EADqB,UACVL,EAAcM,eADJ,aACV,EAAuBC,KADb,gCAEPC,IAAUH,GAFH,2CAAH,qDAKpBI,EAAqB,uCAAG,8BAAAL,EAAA,2DACtBC,EADsB,UACXH,EAAeI,eADJ,aACX,EAAwBC,KADb,gCAERC,IAAUH,GAFF,2CAAH,qDAK3B,OACE,eAACd,EAAD,WACE,eAACE,EAAD,WACE,cAACC,EAAD,CAAOa,IAAKG,EAAYC,IAAKX,EAAeY,IAAI,UAEhD,eAAChB,EAAD,CAAYiB,QAASV,EAArB,UACE,+BAAOL,EAAE,kBACT,cAAC,IAAD,UAIJ,eAACL,EAAD,WACE,cAACC,EAAD,CAAOa,IAAKO,EAAaH,IAAKT,EAAgBU,IAAI,WAElD,eAAChB,EAAD,CAAYiB,QAASJ,EAArB,UACE,+BAAOX,EAAE,kBACT,cAAC,IAAD,c,uBCnCKiB,EAJE,CACflB,K,OCEFmB,IAAQC,IAAIC,KAAkBC,KAAK,CACjCC,UAAW,CAAEC,GAAIC,GACjBC,YAAa,KACbC,IAAK,KACLC,UAAW,WACXC,OAAO,IAGMV,EAAf,EAAeA,ICIAW,EATO,WACpB,OACE,eAAC,IAAD,CAAe7C,MAAOV,EAAtB,UACE,cAACQ,EAAD,IACA,cAAC,EAAD,QCPNgD,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0a6e63f1.chunk.js","sourcesContent":["export interface AppTheme {\n  id: string\n  background: string\n  snow: string\n  primaryText: string\n  secondaryText: string\n  accent: string\n  accentLight: string\n}\n\nexport const LIGHT_THEME: AppTheme = {\n  id: 'light',\n  background: '#ffffff',\n  snow: '#f2f2f2',\n  primaryText: '#464646',\n  secondaryText: '#737373',\n  accent: '#00288F',\n  accentLight: '#0033b3',\n}\n","import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyles = createGlobalStyle`\n  *, *::before, *::after {\n    font-family: 'Open Sans', sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    box-sizing: border-box;\n  }\n\n  html {\n    font-size: 62.5%;\n    overflow-x: hidden;\n\n    @media only screen and (min-width: 1400px) {\n      font-size: 75%;\n    }\n  }\n\n  html, body, #root {\n    height: 100%;\n    overflow-x: hidden;\n\n    margin: 0;\n    padding: 0;\n    outline: 0;\n\n    background: ${({ theme }) => theme.snow};\n    color: ${({ theme }) => theme.primaryText};\n  }\n\n  body, #root {\n    font-size: 1.6rem;\n  }\n\n  input, button, select, code, textarea {\n    font-size: 1.6rem;\n    color: ${({ theme }) => theme.primaryText};\n  }\n\n  svg {\n    overflow: initial;\n  }\n`\n","export default __webpack_public_path__ + \"static/media/FirstImage.0ff9c3f2.jpg\";","export default __webpack_public_path__ + \"static/media/SecondImage.ef100414.png\";","import styled, { css } from 'styled-components'\n\nexport const Button = styled.button.attrs((props) => ({\n  type: props.type || 'button',\n}))`\n  min-height: 5.6rem;\n  width: 100%;\n\n  outline: none;\n  border: none;\n  border-radius: 1rem;\n\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  font-weight: bold;\n  font-size: 1.8rem;\n  color: white;\n\n  padding: 0.8rem 1.6rem;\n\n  cursor: pointer;\n  transition: all 0.2s ease-in-out;\n  user-select: none;\n\n  background: ${(props) => props.theme.accent};\n\n  ${(props) => {\n    if (props.disabled) {\n      return css`\n        pointer-events: none;\n        opacity: 0.6;\n      `\n    }\n  }}\n\n  &:hover,\n  &:focus {\n    background: ${(props) => props.theme.accentLight};\n  }\n\n  span {\n    margin-right: 1.6rem;\n  }\n`\n","import styled from 'styled-components'\n\nimport { Button } from 'src/components'\n\nexport const Container = styled.div`\n  min-height: 100%;\n\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n\n  padding: 4.8rem;\n\n  @media only screen and (max-width: 768px) {\n    padding: 0;\n  }\n\n  @media only screen and (max-width: 1000px) {\n    flex-direction: column;\n    align-items: stretch;\n  }\n`\n\nexport const Item = styled.div`\n  border-radius: 1rem;\n  box-shadow: 1px 1px 16px 1px rgba(0, 0, 0, 0.1);\n\n  padding: 1.6rem;\n  margin: 1.6rem;\n\n  background: ${(props) => props.theme.background};\n\n  @media only screen and (min-width: 1000px) {\n    flex: 1;\n  }\n`\n\nexport const Image = styled.img`\n  height: 32rem;\n  width: 100%;\n\n  border-radius: 1rem;\n\n  margin-bottom: 1.6rem;\n`\n\nexport const CopyButton = styled(Button)``\n","import { useRef } from 'react'\nimport { FiCopy } from 'react-icons/fi'\nimport copyImage from 'copy-image-clipboard'\nimport { useTranslation } from 'react-i18next'\n\nimport { FirstImage, SecondImage } from 'src/assets'\n\nimport { Container, Item, Image, CopyButton } from './styles'\n\nconst Home: React.FC = () => {\n  const { t } = useTranslation('Home')\n\n  const firstImageRef = useRef<HTMLImageElement | null>(null)\n  const secondImageRef = useRef<HTMLImageElement | null>(null)\n\n  const handleCopyFirstImage = async () => {\n    const imageSrc = firstImageRef.current?.src\n    if (imageSrc) await copyImage(imageSrc)\n  }\n\n  const handleCopySecondImage = async () => {\n    const imageSrc = secondImageRef.current?.src\n    if (imageSrc) await copyImage(imageSrc)\n  }\n\n  return (\n    <Container>\n      <Item>\n        <Image src={FirstImage} ref={firstImageRef} alt=\"First\" />\n\n        <CopyButton onClick={handleCopyFirstImage}>\n          <span>{t('copyJpgImage')}</span>\n          <FiCopy />\n        </CopyButton>\n      </Item>\n\n      <Item>\n        <Image src={SecondImage} ref={secondImageRef} alt=\"Second\" />\n\n        <CopyButton onClick={handleCopySecondImage}>\n          <span>{t('copyPngImage')}</span>\n          <FiCopy />\n        </CopyButton>\n      </Item>\n    </Container>\n  )\n}\n\nexport default Home\n","import Home from './Home.json'\n\nconst resource = {\n  Home,\n}\n\nexport default resource\n","import i18next from 'i18next'\nimport { initReactI18next } from 'react-i18next'\n\nimport EN from './EN'\n\ni18next.use(initReactI18next).init({\n  resources: { en: EN },\n  fallbackLng: 'en',\n  lng: 'en',\n  defaultNS: 'Glossary',\n  debug: false,\n})\n\nexport default i18next\n","import { ThemeProvider } from 'styled-components'\n\nimport { GlobalStyles, LIGHT_THEME } from 'src/styles'\nimport Home from 'src/pages/Home'\n\nimport '@fontsource/open-sans'\nimport 'src/locales'\n\nconst App: React.FC = () => {\n  return (\n    <ThemeProvider theme={LIGHT_THEME}>\n      <GlobalStyles />\n      <Home />\n    </ThemeProvider>\n  )\n}\n\nexport default App\n","import { StrictMode } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './pages/App'\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}